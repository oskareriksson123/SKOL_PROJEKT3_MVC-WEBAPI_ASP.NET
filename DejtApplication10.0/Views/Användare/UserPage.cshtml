@model DejtApplication10._0.Models.MainViewModel
@using System.Linq
@using DejtApplication10._0.Models
@{
    ViewBag.Title = "UserPage";
}

<h1 class="rubrik">Hej! @Model.model.Förnamn  @Model.model.Efternamn</h1>

<div class="UserPageInfo">

    <div id="Info">

        <div id="besökaresektion">
            <h4 class="Userpage"> Dina 5 senaste besökare</h4>
            <table style="width: 100%;">
                <tbody id="besökare">
                </tbody>
            </table>
        </div>


        <div id="AnvändareInfo">
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.model.Förnamn)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.model.Förnamn)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.model.Efternamn)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.model.Efternamn)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.model.AnvändarNamn)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.model.AnvändarNamn)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.model.Epost)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.model.Epost)
                </dd>


                <dt>
                    @Html.DisplayNameFor(model => model.model.Födelsedatum)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.model.Födelsedatum)
                </dd>

            </dl>

            <p id="text">
                @Html.ActionLink("Redigera din profil här", "EditUser", new { username = @Model.model.AnvändarNamn }) |
            </p>

            <br />
        </div>
        <div>

            @if (Model.model.Profilbild != null)
            {
                var base64 = Convert.ToBase64String(Model.model.Profilbild);
                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src='@imgsrc'
                     style="max-width:150px;max-height:150px" id="pic" />
            }
            <h4 id="text"> Din Profilbild </h4>
        </div>
    </div>
    <div id="Linje"> </div>

    @{

        var inloggadesId = AnvändareInloggadVerifeierare.användaren.ID;

        var vänner = from användare in Model.allaAnvändare.Användare
                     where användare.allaAnvändarensVänner.Any(vänn => vänn.VännensID == inloggadesId)
                     select användare;
       // tar fram alla vänner

    }

    <div id="VännersRubriker">
        <h2 id="text"> Dina Vänner </h2>

        <h4 id="text">Du har @vänner.Where(x=>x.IsActive==true).Count().ToString() vänner/vän</h4>
    </div>

    <div id="ProfilensVänner">

        @foreach (var item in vänner)
        {
            // tar fram bilden och kollar om användaren är aktiv

            if (item.IsActive)
            {
                var kategori = from användare in Model.allaVänner
                               where användare.VännensID == item.ID && användare.Username == item.AnvändarNamn && användare.TillHörUser == AnvändareInloggadVerifeierare.användaren.AnvändarNamn
                               select användare.kategori;

                <div id="envänn">
                    @{
                        var base64 = Convert.ToBase64String(@item.Profilbild);
                        var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                        <a href='@Url.Action("AnotherUserPage", "Användare", new { username = item.AnvändarNamn })'>
                            <img src='@imgsrc'
                                 style="max-width:100px;max-height:100px" id="pic" />
                        </a>
                        <p id="text"> @item.Förnamn  @item.Efternamn </p>


                        <p>Kategori: @kategori.Single().ToString() </p> <a class="BtnBytKat" id="@item.ID" name="@item.AnvändarNamn">  byt kategori</a>
                    }
                </div>
            }

        }


    </div>


    <nav id="knappar" onmouseover="document.getElementById('AlternativTillKontot').style.display = 'flex'; document.getElementById('PilNed').style.display = 'none';" onmouseout="document.getElementById('AlternativTillKontot').style.display = 'none';  document.getElementById('PilNed').style.display = 'flex'">
        <ul id="AlternativTillKontot">
            <li class="KnapparAction" id="SparaTillXml"> <a class="Action" value="Spara profil" onclick="location.href='@Url.Action("SparaTillXml", "Användare")'"> spara profil </a> </li>
            <li class="KnapparAction"> <a class="Action" onclick="location.href='@Url.Action("InaktiveraAnvändare", "Användare")'"> Inaktivera kontot </a> </li>
        </ul>
        <p id="PilNed"> < </p>
    </nav>
    <p id="ComfirmSparat"></p>


    <div id="AllaMedelanden">   </div>
    <h2 id="text">Medelanden</h2>


    <div id="Skicka_Medelanden">


        <h4 class="Userpage">Skicka nytt meddelande</h4>
        <form name="form1" id="form2">
            <textarea name="meddelande" id="meddelande " value="" rows="5" cols="35"></textarea>

            <input id="inputUsername" type="text" name="inloggaUsername" value="@AnvändareInloggadVerifeierare.användaren.AnvändarNamn" />

            <input id="inputUserpageID" type="text" name="userpageID" value="@AnvändareInloggadVerifeierare.användaren.ID" />
            <br />
            <input type="button" id="Skicka" value="Skicka" />
        </form>
        <span id="inforuta"></span>
    </div>

    <h3 class="Userpage" id="text">Inlägg</h3>

    <div id="inläggen">
        <div id="flodesektion">
            <table style="width: 100%;">
                <tbody id="flode">
                </tbody>
            </table>
        </div>
        <br />
    </div>

</div>





@section scripts {

    <script>


        var detManTrycker = $('#SparaTillXml');
        detManTrycker.on('click', function () {
            alert("Sparat!");
        });
        


    // Hämtar knappen och gör så att den kan trycka på (byte av kategori)
    var $whatIsClicked = $('.BtnBytKat');
        $whatIsClicked.on('click', function () {
            //Hämtar allaVärden som behövs
            var Username = this.name
            var id = this.id
            var NyKategori = prompt("Skriv in den nya kategorin", "");

            if (NyKategori != "" && NyKategori != null) {
       // Här anropar vi kontrollern
       $.ajax({
         type: "POST",
         method: 'post',
         url: '/api/VarApi/PostEditDescription',
           contentType: "application/json; charset=utf-8",
           data: JSON.stringify([id, Username, NyKategori]),
           dataType: "json",

           success: function () {
              location.reload();            
         },
         error: function () {
             alert('Något gick fel!');
           }

       });
            };
    });


        var klicks = 0;  // variablar för ta bort funktionen
        var sparadid = "";

        $(function () {

            $('#flode').on('click', '.BtnTabort', function () {
                var medId = $(this).attr("name");
                var medId2 =$(this).attr("name"); // hämtar meddelande id
                var inloggadID = @AnvändareInloggadVerifeierare.användaren.ID;
                //var result = prompt("Är du säker på att du vill ta bort meddelandet? För att ta bort meddelandet ange = Ta bort", "");
                klicks++;
                
                if (klicks == 1) {

                    if (sparadid == "") {       //om man klickar första gången och idn är tom så sparar man
                                                // idn till lokala variablen och sätter <p> taggen till ett 
                        sparadid = medId2;       // varningsmeddelande på rätt ställe.
                        $('#' + medId2).text("Tryck en gång till ifall du vill ta bort");
                         $('#' + medId2).css('color','red');

                    }
                    else {
                        $('#' + sparadid).text("");  //om det finns ett värde i sparadid så rensar man den
                        sparadid = medId2;               // varningen och sätter varningen på den nya inlägget man klickat
                        $('#' + medId2).text("Tryck en gång till ifall du vill ta bort");
                            $('#' + medId2).css('color','red');
                    }
                }
                
                if (klicks >= 1 && sparadid != medId2){
                    klicks = 1;                         //kollar om man har fler klicks än 1 och om det skiljer sig med id
                    $('#' + sparadid).text("");         // betyder att användare klickar runt på ta bort knapparna 
                    sparadid = medId2;
                    $('#' + medId2).text("Tryck en gång till ifall du vill ta bort");
                        $('#' + medId2).css('color','red');
            }
                
                
               // result = result[0].toUpperCase() + result.substring(1);

                if (klicks >= 2 && medId2 == sparadid) {  // kollar om man har klickat två gånger på samma knapp och inlägg
                    $.ajax({                            //kör metoden för att ta bort inlägget
                           type: "POST",
                           method: 'post',
                           url: '/api/VarApi/PostMeddelandeTaBort',
                           contentType: "application/json; charset=utf-8",
                           //data: {meddelandeid: medId, inloggadid: inloggadID},
                            data: JSON.stringify([medId,inloggadID]),
                            dataType: "json",

                        success: function (result) {
                            sparadid = "";
                            klicks = 0;
                            update();
                        },

                           error: function (result) {

                            }
                    });
                }
            });

           


            $("#Skicka").click(function () {
                $("#inforuta").text("");
                
                var dataform = new FormData(document.querySelector('#form2'))
                var name1 = dataform.get("meddelande");
                                                        // hämtar från meddelanderutan

               

                if (name1 == '' || name1 == null) { // kollar om den är tom eller inte
                   
                    $("#inforuta").text("Ditt meddelande måste innehålla text");
                    $('#inforuta').css('color','red');
                    return false;
                } else {
                     
                   $.ajax({

                            url: '/api/VarApi/Post',

                            type: 'POST',

                            method: 'Post',

                            dataType: 'json',

                            data: $('#form2').serialize(),

                            success: function (data, textStatus, xhr) {

                                console.log(data);
                                update();
                                
                                $('#form2').children('textarea').val(''); // tömmer textrutan efter varje skickat inlägg
                            },

                            error: function (xhr, textStatus, errorThrown) {

                                console.log(textStatus);

                            }

                        });
                        update();
                }

                     
                    });

                function update() {
                // Hämta användare från api
                    
                $.get('/api/VarApi/Get/', {id:@AnvändareInloggadVerifeierare.användaren.ID}, function (allaMeddelanden) {
                    $('#flode').text(''); // Rensa tabellen

                    // Loopa igenom resultatet

                    allaMeddelanden.forEach(function (meddelande) {



                        var tr = $('<tr class="inlaggg"></tr>');
                        tr.append(
                            '<div id="inlagg">'+
                            '<td>' +
                            '<p>Från <span class="Userpage">' + meddelande.InläggIfrånAnvändarnamn + '</span></p>' +
                            '<p id ="inläggMedelande">' + meddelande.Meddelande + '</p>' +
                            '<button class="BtnTabort" type="submit" name="' + meddelande.ID + '" value=""> Ta bort</button>' +
                            '<p id="' + meddelande.ID + '"></p>' +
                            '</td>' + '<br>' + '<br>' + ' </div>'
                        );
                        $('#flode').append(tr);

                    });
                });
            }
            function updateBesökare() {
                $.get('/api/VarApi/GetBesökare/', { id:@AnvändareInloggadVerifeierare.användaren.ID}, function (allaBesökare) {
                    $('#besökare').text('');

                    allaBesökare.forEach(function (besökare) {
                        var tr = $('<tr></tr>');
                        tr.append(
                            '<td>' +
                            '<p> <span class="Userpage">' + besökare.BesökandeAnvändarnamn + '</span> besökte dig: ' + besökare.Datum + '</p>' +
                            '</td>'
                        );
                        $('#besökare').append(tr);
                    });
                });
            }

            update();
            updateBesökare();
                });
    </script>

}


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>